{"componentChunkName":"component---src-templates-blog-post-js","path":"/2018/180619_enscript/180619_enscript/","result":{"data":{"site":{"id":"Site","siteMetadata":{"title":"RINotes"}},"markdownRemark":{"id":"2d16a939-9e4f-52b3-99a1-77762fea9dc9","excerpt":"タイトルの通り 他人のソースコードだったりを読むときに普段iPad ProにPDFとしてダウンロードし、書き込んだりマークしたりして読むことが多い これまではWindowsでこの変換(というか印刷)を行っていたが、Linuxを常用するようになったのでLinuxでも簡単にできるようにしてみた enscript…","html":"<p>タイトルの通り</p>\n<p>他人のソースコードだったりを読むときに普段iPad ProにPDFとしてダウンロードし、書き込んだりマークしたりして読むことが多い</p>\n<p>これまではWindowsでこの変換(というか印刷)を行っていたが、Linuxを常用するようになったのでLinuxでも簡単にできるようにしてみた</p>\n<h4>enscript</h4>\n<p>これはソースコードをPostScriptやhtmlに変換してくれるパッケージである</p>\n<p>Arch LinuxであればPacmanでインストールする</p>\n<p>何ができるかというと、行番号表示やソースコードのシンタックスハイライトが可能になる</p>\n<p>例えば、C++のソースコードをPSととして出力するには、</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ enscript --highlight=cpp --color -C -H1 main.cpp -o main.cpp.ps</code></pre></div>\n<p>とすればよい</p>\n<p><code class=\"language-text\">--highlight=**</code>でソースコードの言語を指定することができる</p>\n<p>どの言語が使えるかは</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ enscript --help-highlight</code></pre></div>\n<p>で調べることができる(普段使いしそうな言語は殆ど網羅されている感じである)</p>\n<p><code class=\"language-text\">-C</code>は左側に行番号を表示してくれる</p>\n<h4>ps2pdf</h4>\n<p>PSをPDFに変換するには、このパッケージを使う(なぜか既にインストール済みだった)</p>\n<p>使い方は簡単で</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ ps2pdf main.cpp.ps</code></pre></div>\n<p>とすると<code class=\"language-text\">main.cpp.pdf</code>というファイルが生成される</p>\n<h4>おまけ</h4>\n<p>これらを組み合わせた、引数にC++のソースコードを指定すればPDFが出力される単純なシェルスクリプト</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token shebang important\">#!/bin/bash</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$#</span> -eq <span class=\"token number\">1</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n\t<span class=\"token assign-left variable\">filename</span><span class=\"token operator\">=</span><span class=\"token variable\">$1</span>\n\tenscript --highlight<span class=\"token operator\">=</span>cpp --color -C -H1 <span class=\"token variable\">$filename</span> -o <span class=\"token variable\">$filename</span>.ps\n\tps2pdf <span class=\"token variable\">$filename</span>.ps\n<span class=\"token keyword\">fi</span></code></pre></div>","frontmatter":{"title":"ソースコードをPDFで出力したい","date":"June 19, 2018","description":"これまではWindowsでこの変換(というか印刷)を行っていたが、Linuxを常用するようになったのでLinuxでも簡単にできるようにしてみた"}}},"pageContext":{"slug":"/2018/180619_enscript/180619_enscript/","previous":{"fields":{"slug":"/2018/180607_polybar_setting/180607_polybar_setting/"},"frontmatter":{"title":"Polybarの設定"}},"next":{"fields":{"slug":"/2018/180716_reinstall_arch/180716_reinstall_arch/"},"frontmatter":{"title":"Arch Linux再インストールで詰まった点"}}}}}