{"componentChunkName":"component---src-templates-blog-post-js","path":"/180906_rofi-mpd-client/","result":{"data":{"site":{"id":"Site","siteMetadata":{"title":"Gatsby Starter Blog"}},"markdownRemark":{"id":"8ecd51b7-2b07-5510-97bb-5725138e59de","excerpt":"タイトルのとおりです。 Repository: rofi-mpd-client   Rofi rofiはi3のようなタイル型ウィンドウマネージャーでよく用いられているランチャーです。 基本的な動作としては、選びたい項目をrofi…","html":"<p>タイトルのとおりです。<br>\nRepository: <a href=\"https://github.com/tonooo71/rofi-mpd-client\">rofi-mpd-client</a>  </p>\n<h2>Rofi</h2>\n<p>rofiはi3のようなタイル型ウィンドウマネージャーでよく用いられているランチャーです。<br>\n基本的な動作としては、選びたい項目をrofiに渡すとリストとして表示され、選択した項目(の文字列)を返すといったものです。  </p>\n<p>{{&#x3C; figure src=“/img/screenshot180906.jpg” title=“Screenshot180906” class=“center” >}}</p>\n<p>よく使われているのは上のようにプログラムを選択するランチャーとしてですが、上記のように入力を手動で与えることができるので、色々活用方法が考えられます。<br>\n実際にrofiのwikiページにはユーザーが作成したスクリプトがいくつか紹介されています。(<a href=\"https://github.com/DaveDavenport/rofi/wiki/User-scripts\">User scripts</a>)  </p>\n<p>今回作ったMPDのクライアントも2つ紹介されているのですが、自分がよく使う機能だったり欲しい機能だったりがなかったりしたので、作ってみることにしました。<br>\n最初は例のごとくシェルスクリプトで作ろうと思ったのですが、挫折したのでおとなしくpython3で記述しました。<br>\nMPDへアクセスするために上記のスクリプトではいずれも<code class=\"language-text\">mpc</code>というCLIクライアントを利用していたのですが、いちいちsubprocessモジュールで呼び出すのもなんかなあって感じだったので、Pythonのモジュールないか探していたらありました。<br>\n<code class=\"language-text\">python-musicpd</code>というモジュールです(数年前に更新がストップしていますが使うには問題ないです)。これはクライアントというよりはラッパーのようなものなので、<code class=\"language-text\">mpc</code>よりも柔軟に機能を呼び出せそうです。  </p>\n<h2>Rofi-mpd-client</h2>\n<p>で、実際できたものがこちらです。<br>\n{{&#x3C; figure src=“/img/rofi-mpd0.jpg” title=“rofi-mpd-client-top” class=“center” >}}</p>\n<p>{{&#x3C; figure src=“/img/rofi-mpd1.jpg” title=“rofi-mpd-client-artist” class=“center” >}}</p>\n<p>{{&#x3C; figure src=“/img/rofi-mpd2.jpg” title=“rofi-mpd-client-album” class=“center” >}}</p>\n<p>一番上はrofiおなじみの検索バーです。インクリメンタルサーチ可能です。<br>\n2列目は今再生している曲を表示します。またプレイリストにおける現在の位置も最後尾に表示します。<br>\nそして選択リストでは、再生/停止コマンドと曲をプレイリストに追加します。私の環境ではアーティスト名/アルバム名/のようなフォルダ構造にしているので、MPDのインデックスにおけるrootの場所では追加できないようにしています。<br>\n一応アルバムを選択すると曲まで表示しますが、曲を選択してもそれに対しては未実装なので何も起きません。  </p>\n<p>これCLIファイラーのように見えますが、rofiなのでなにか選択する毎に一旦rofiは終了します。そして再び立ち上がる、といった動作をするのでチカチカします。</p>\n<h2>メモ</h2>\n<p>フォルダ間を遷移させるためにrofiを何回も起動させなければいけなかったので、</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">while</span> <span class=\"token number\">1</span>\n    rofi<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>みたいに書いていたら、rofiが終了できなくなって詰みかけました。(rofiが最前面に表示され、rofiへの入力が最優先される仕様上、いかなるキーのタイプを受け付けないのが理由です)<br>\n対策としてrofiから返ってくる要素がない場合whileループから脱出するようにしました。つまりEscキーを押せばrofiはなんの要素も選択されることなく終了するので、rofiの無限ループは起こりません。  </p>","frontmatter":{"title":"Rofiを使って簡単なMPDクライアントを作った","date":"September 06, 2018","description":null}}},"pageContext":{"slug":"/180906_rofi-mpd-client/","previous":{"fields":{"slug":"/180831_qutebrowser/"},"frontmatter":{"title":"qutebrowserをインストール"}},"next":{"fields":{"slug":"/180911_pocket_for_qb/"},"frontmatter":{"title":"qutebrowser上でpocketへ保存する"}}}}}