{"version":3,"sources":["webpack:///./src/templates/tag-page.js"],"names":["TagPageTemplate","data","pageContext","location","tag","index","siteTitle","site","siteMetadata","title","allPosts","allMarkdownRemark","edges","numPosts","settings","postsPerOnePage","posts","filter","post","node","frontmatter","tags","includes","style","display","flexWrap","justifyContent","listStyle","padding","to","rel","Math","ceil","length","marginTop","rhythm","marginBottom","icon","faTag","marginRight","map","key","fields","slug","pageQuery"],"mappings":"mSAsEeA,UA3DS,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SACpCC,EAAgBF,EAAhBE,IAAKC,EAAWH,EAAXG,MACPC,EAAYL,EAAKM,KAAKC,aAAaC,MACnCC,EAAWT,EAAKU,kBAAkBC,MAClCC,EAAWZ,EAAKM,KAAKC,aAAaM,SAASC,gBAI3CC,EAAQN,EAASO,QAAO,SAAAC,GAAI,OAAIA,EAAKC,KAAKC,YAAYC,KAAKC,SAASlB,MAGxE,6BACE,wBACEmB,MAAO,CACLC,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,4BACGvB,EAAQ,GACP,kBAAC,OAAD,CAAMwB,GAAc,IAAVxB,EAAA,QAAqBA,EAAQ,GAA7B,IAAwCyB,IAAI,QAAtD,gBAKJ,4BACGzB,IAAU0B,KAAKC,KAAKtB,EAASuB,OAASpB,IACrC,kBAAC,OAAD,CAAMgB,GAAE,QAASxB,EAAQ,GAAKyB,IAAI,QAAlC,kBASV,OACE,kBAAC,IAAD,CAAQ3B,SAAUA,EAAUM,MAAOH,GACjC,kBAAC,IAAD,CAAKG,MAAM,cACX,kBAAC,IAAD,MACA,wBACEc,MAAO,CACLW,UAAWC,YAAO,GAClBC,aAAc,IAGhB,kBAAC,IAAD,CAAiBC,KAAMC,IAAOf,MAAO,CAACgB,YAAa,UANrD,QAOQnC,GAGPY,EAAMwB,KAAI,gBAAGrB,EAAH,EAAGA,KAAH,OAAc,kBAAC,IAAD,iBAAUA,EAAV,CAAgBsB,IAAKtB,EAAKuB,OAAOC,aAQzD,IAAMC,EAAS","file":"component---src-templates-tag-page-js-d2b7906a20212d1c2146.js","sourcesContent":["import React from \"react\";\nimport { Link, graphql } from \"gatsby\";\nimport { rhythm, scale } from \"../utils/typography\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTag } from '@fortawesome/free-solid-svg-icons';\n\nimport Bio from \"../components/bio\";\nimport Layout from \"../components/layout\";\nimport Post from \"../components/post\";\nimport SEO from \"../components/seo\";\n\nconst TagPageTemplate = ({ data, pageContext, location }) => {\n  const { tag, index, } = pageContext;\n  const siteTitle = data.site.siteMetadata.title;\n  const allPosts = data.allMarkdownRemark.edges;\n  const numPosts = data.site.siteMetadata.settings.postsPerOnePage;\n  // const startIndex = (index - 1) * numPosts;\n  // const endIndex = index * numPosts > allPosts ? allPosts : index * numPosts;\n  // const posts = allPosts.slice(startIndex, endIndex);\n  const posts = allPosts.filter(post => post.node.frontmatter.tags.includes(tag));\n\n  const navigation = (\n    <nav>\n      <ul\n        style={{\n          display: `flex`,\n          flexWrap: `wrap`,\n          justifyContent: `space-between`,\n          listStyle: `none`,\n          padding: 0,\n        }}\n      >\n        <li>\n          {index > 1 && (\n            <Link to={index !== 2 ? `page${index - 1}` : `/`} rel=\"prev\">\n              ← New Posts\n            </Link>\n          )}\n        </li>\n        <li>\n          {index !== Math.ceil(allPosts.length / numPosts) && (\n            <Link to={`page${index + 1}`} rel=\"next\">\n              Old Posts →\n            </Link>\n          )}\n        </li>\n      </ul>\n    </nav>\n  );\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"All posts\" />\n      <Bio />\n      <h2\n        style={{\n          marginTop: rhythm(1),\n          marginBottom: 0,\n        }}\n      >\n        <FontAwesomeIcon icon={faTag} style={{marginRight: \"10px\"}}/>\n        Tag: {tag}\n      </h2>\n      {/* {navigation} */}\n      {posts.map(({ node }) => <Post {...node} key={node.fields.slug} />)}\n      {/* {navigation} */}\n    </Layout>\n  );\n};\n\nexport default TagPageTemplate;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        settings {\n          postsPerOnePage\n        }\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MM/DD YYYY\")\n            title\n            description\n            tags\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}